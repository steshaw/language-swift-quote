language-swift-quote-0.1.0.0: unregistering (local file changes)
language-swift-quote-0.1.0.0: configure
Configuring language-swift-quote-0.1.0.0...
language-swift-quote-0.1.0.0: build
Preprocessing library language-swift-quote-0.1.0.0...
[3 of 4] Compiling Language.Swift.Quote.Pretty ( Language/Swift/Quote/Pretty.hs, .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/Language/Swift/Quote/Pretty.o )

Language/Swift/Quote/Pretty.hs:149:45: Warning:
    Defined but not used: ‘optGenericParamClause’

Language/Swift/Quote/Pretty.hs:149:84: Warning:
    Defined but not used: ‘optThrowDecl’

Language/Swift/Quote/Pretty.hs:170:21: Warning:
    Defined but not used: ‘optExternName’

Language/Swift/Quote/Pretty.hs:170:60: Warning:
    Defined but not used: ‘optExpression’

Language/Swift/Quote/Pretty.hs:116:3: Warning:
    Pattern match(es) are non-exhaustive
    In an equation for ‘ppr’:
        Patterns not matched: ForInStatement _ _ _ _

Language/Swift/Quote/Pretty.hs:170:3: Warning:
    Pattern match(es) are non-exhaustive
    In an equation for ‘ppr’:
        Patterns not matched:
            ParameterVar _ _ _ _
            ParameterInOut _ _ _
            ParameterDots _ _ _

Language/Swift/Quote/Pretty.hs:193:3: Warning:
    Pattern match(es) are overlapped
    In an equation for ‘ppr’:
        ppr (PatternInitializer pattern optExpression) = ...
In-place registering language-swift-quote-0.1.0.0...
language-swift-quote-0.1.0.0: install
Installing library in
/Users/steshaw/Projects/steshaw/swift-haskell/language-swift-quote/.stack-work/install/x86_64-osx/lts-3.8/7.10.2/lib/x86_64-osx-ghc-7.10.2/language-swift-quote-0.1.0.0-HFMzJQLIZVXJdF6T0HMG9V
Registering language-swift-quote-0.1.0.0...
language-swift-quote-0.1.0.0: configure (test)
Configuring language-swift-quote-0.1.0.0...
language-swift-quote-0.1.0.0: build (test)
Preprocessing library language-swift-quote-0.1.0.0...
In-place registering language-swift-quote-0.1.0.0...
Preprocessing test suite 'unit' for language-swift-quote-0.1.0.0...
Linking .stack-work/dist/x86_64-osx/Cabal-1.22.4.0/build/unit/unit ...
language-swift-quote-0.1.0.0: test (suite: unit)



Module [ExpressionStatement (Expression Nothing (PrefixExpression Nothing (FunctionCallE (FunctionCall (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "print", idgGenericArgs = []}))) [ExpressionElement Nothing (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (StringLiteral "hello"))))) [])] Nothing))) [])]






Module [DeclarationStatement (ConstantDeclaration [] [] [PatternInitializer (ExpressionPattern (Expression Nothing (PrefixExpression Nothing (PostfixOperator (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "maximumNumberOfLoginAttempts", idgGenericArgs = []}))) "=")) [])) Nothing]),ExpressionStatement (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (IntegerLiteral 10))))) []),DeclarationStatement (DeclVariableDeclaration (SimpleVariableDeclaration [PatternInitializer (ExpressionPattern (Expression Nothing (PrefixExpression Nothing (PostfixOperator (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "currentLoginAttempt", idgGenericArgs = []}))) "=")) [])) Nothing])),ExpressionStatement (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (IntegerLiteral 0))))) [])]






Module [ExpressionStatement (Expression Nothing (PrefixExpression Nothing (PostfixOperator (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "a", idgGenericArgs = []}))) "=")) []),ExpressionStatement (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (BooleanLiteral True))))) []),WhileStatement (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "a", idgGenericArgs = []})))) []) (CodeBlock [ExpressionStatement (Expression Nothing (PrefixExpression Nothing (FunctionCallE (FunctionCall (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "print", idgGenericArgs = []}))) [ExpressionElement Nothing (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (StringLiteral "Hello"))))) [])] Nothing))) [])])]






Module [ForStatement {forInitE = Just (FiExpressionList [Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "a", idgGenericArgs = []})))) []]), forCondE = Just (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "b", idgGenericArgs = []})))) []), forNextE = Just (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "c", idgGenericArgs = []})))) []), forBlock = CodeBlock [ExpressionStatement (Expression Nothing (PrefixExpression Nothing (FunctionCallE (FunctionCall (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "print", idgGenericArgs = []}))) [ExpressionElement Nothing (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (StringLiteral "Hello"))))) [])] Nothing))) [])]}]






Module [RepeatWhileStatement (CodeBlock [DeclarationStatement (DeclVariableDeclaration (SimpleVariableDeclaration [PatternInitializer (ExpressionPattern (Expression Nothing (PrefixExpression Nothing (PostfixOperator (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "a", idgGenericArgs = []}))) "=")) [])) Nothing])),ExpressionStatement (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (IntegerLiteral 10))))) []),ExpressionStatement (Expression Nothing (PrefixExpression Nothing (FunctionCallE (FunctionCall (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "print", idgGenericArgs = []}))) [ExpressionElement Nothing (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "a", idgGenericArgs = []})))) [])] Nothing))) []),ExpressionStatement (Expression Nothing (PrefixExpression Nothing (FunctionCallE (FunctionCall (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "print", idgGenericArgs = []}))) [ExpressionElement Nothing (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "b", idgGenericArgs = []})))) [])] Nothing))) [])]) (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryParenthesized [ExpressionElement Nothing (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (BooleanLiteral True))))) [])]))) [])]






Module [DeclarationStatement (TypeAlias [] Nothing "Integer" (Type "int"))]






Module [DeclarationStatement (FunctionDeclaration {funAttrs = [], funDecls = [], funName = FunctionNameIdent "hello", funGenericParamClause = Nothing, funParameterClauses = [[]], funThrowDecl = Nothing, funResult = Nothing, funBody = Just (CodeBlock [ExpressionStatement (Expression Nothing (PrefixExpression Nothing (FunctionCallE (FunctionCall (PostfixPrimary (PrimaryExpression1 (IdG {idgIdentifier = "print", idgGenericArgs = []}))) [ExpressionElement Nothing (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (StringLiteral "hello"))))) [])] Nothing))) [])])})]






Module [ExpressionStatement (Expression Nothing (PrefixExpression Nothing (PostfixOperator (PostfixPrimary (PrimaryLiteral (RegularLiteral (IntegerLiteral 1)))) "*")) []),ExpressionStatement (Expression Nothing (PrefixExpression Nothing (PostfixPrimary (PrimaryLiteral (RegularLiteral (IntegerLiteral 2))))) [])]



Test suite failure for package language-swift-quote-0.1.0.0
    unit:  exited with: ExitFailure 1
Logs printed to console

